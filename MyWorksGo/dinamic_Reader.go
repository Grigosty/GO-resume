package main

import "fmt"

func main() {
	m := make(map[int]int)
	var number int
	for i := 0; i < 10; i++ {
		fmt.Scan(&number)
		if m[number] != 0 {
			fmt.Print(m[number], " ")
		} else {
			m[number] = work(number)
			fmt.Print(m[number], " ")
		}
	}
}

func work(x int) int {
	return x + 1
}

/*
Создание отображений (правильные способы)
1) m1 := make(map[int]int) - int как пример, может быть любой другой тип
2) m2 := map[int]int{
	12:2,
	1:5,
}
ВАЖНО
Не стоит задавать мап просто через var m0 map[int]int
При последующей попытке добавления пары возникнет ошибка, которая вызовет панику

Функции для работы с map:
1) delete(имя_карты, ключ)
*/

/*
Что бы связать два файла нужно подвязать их под один пакет
при этом если в файле main2.go будет использоваться и импортироваться пакет math - при вызове функции второго файла из первого
мы можем не импортировать в первый файл пакеты, использованные во втором файле.
*/

/*
Синтаксис функции:
func имя_функции (Список параметров) (список возвращаемых значений){
	Выполняемые параметры
}
*/

/*
Пример функции:
func hello(x int, y int){
	fmt.Println("Hello")
}
*/

/*
Что бы изучить какую-то функцию нужно вконсоли прописать go doc fmt.Println
*/

/*
Инициализация среза
var a []int
var b []int = []int{1, 2, 3}
c := []int{1, 2, 3}
d := []int{1: 12}
*/

/*
Советы по выгрузке:

1)
Если вы хотите сделать все правильно, то алгоритм ваших действий  примерно таков:
Создать проект в папке /src/ваш_любой_ник/имя_проекта.
Если у вас уже есть github аккаунт то можете создать проект так: /src/github.com/username/имя_проекта.
2)

*/