package main

import "fmt"

//Задача поправить вторую map, что бы все было правильно

func main() {
	groupCity := map[int][]string{
		10:   []string{"town11", "town12"}, // города с населением 10-99 тыс. человек
		100:  []string{"town21","town22"}, // города с населением 100-999 тыс. человек
		1000: []string{"town31","town32","town33"}, // города с населением 1000 тыс. человек и более
	}
	cityPopulation := map[string]int{
		"town11": 26,
		"town21": 150,
		"town22": 170,
		"town31": 2000,
		"town12": 30,
		"town32": 3000,
		"town33": 4000,
	}

	/*
	1 итерация)
	key1 = town11 (не подходит)
		Заходим во внутренний цикл:
		1 итерация) ind2 = 0, elem2 = town21; key1 != elem2; ind2 != 1 => двигаемся дальше
		2 итерация) ind2 = 1, elem2 = town22; key1 != elem2; ind2 == 1 => город удаляется
	Итерация с ошибкой)
	key1 = "town21" (подходит, не нужно удалять)
		Заходим во внутренний цикл:
		1 итерация) ind2 = 0
	*/
	
	for key1, _ := range(cityPopulation) {
		for ind2,elem2 := range(groupCity[100]){
			if (key1==elem2){
				break
			} else{
				if ind2 == len(groupCity[100])-1{
					delete(cityPopulation,key1)
				}else{
					continue
				}
			}
		}
	}
	/*for ind, elem := range(groupCity[100]){
		fmt.Println(ind,elem)
	}*/

	fmt.Println(cityPopulation)
}

/*
Создание отображений (правильные способы)
1) m1 := make(map[int]int) - int как пример, может быть любой другой тип
2) m2 := map[int]int{
	12:2,
	1:5,
}
ВАЖНО
Не стоит задавать мап просто через var m0 map[int]int
При последующей попытке добавления пары возникнет ошибка, которая вызовет панику

Функции для работы с map:
1) delete(имя_карты, ключ)
*/

/*
Ввод с клавиатуры:
Вводить можно просто через пробел - IDE поймет, что это разные элементы.
Пример:
for i:=0; i < 10; i++{
	fmt.Scan(&text) //если вводелить через проблем 10 чисел - будет проведено 10 итераций
}
*/

/*
Что бы связать два файла нужно подвязать их под один пакет
при этом если в файле main2.go будет использоваться и импортироваться пакет math - при вызове функции второго файла из первого
мы можем не импортировать в первый файл пакеты, использованные во втором файле.
*/

/*
Синтаксис функции:
func имя_функции (Список параметров) (список возвращаемых значений){
	Выполняемые параметры
}
*/

/*
Пример функции:
func hello(x int, y int){
	fmt.Println("Hello")
}
*/

/*
Что бы изучить какую-то функцию нужно вконсоли прописать go doc fmt.Println
*/

/*
Инициализация среза
var a []int
var b []int = []int{1, 2, 3}
c := []int{1, 2, 3}
d := []int{1: 12}
*/

/*
Советы по выгрузке:

1)
Если вы хотите сделать все правильно, то алгоритм ваших действий  примерно таков:
Создать проект в папке /src/ваш_любой_ник/имя_проекта.
Если у вас уже есть github аккаунт то можете создать проект так: /src/github.com/username/имя_проекта.
2)

*/